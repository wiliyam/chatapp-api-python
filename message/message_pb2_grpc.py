# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import message.message_pb2 as message__pb2


class chatStub(object):
  """define chat service
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.messageChat = channel.unary_unary(
        '/message.chat/messageChat',
        request_serializer=message__pb2.Chatmessage.SerializeToString,
        response_deserializer=message__pb2.Chatmessage.FromString,
        )


class chatServicer(object):
  """define chat service
  """

  def messageChat(self, request, context):
    """define chat methods

    message type chat method
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_chatServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'messageChat': grpc.unary_unary_rpc_method_handler(
          servicer.messageChat,
          request_deserializer=message__pb2.Chatmessage.FromString,
          response_serializer=message__pb2.Chatmessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'message.chat', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
